{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","role","onClick","toggleMode","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","header","rows","col","backgroundColor","value","onChange","event","console","log","target","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","length","About","myStyle","setMyStyle","_useState3","_useState4","enableText","setEnableText","aria-labelledby","data-bs-parent","Alert","alert","class","defaultProps","App","setMode","setAlert","body","background","setTimeout","react_router","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.0d0f5138.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/About\">{props.about}</Link>\r\n                        </li>\r\n\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n\r\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" >Enable Dark mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n//p should be lowercase\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    about: PropTypes.string\r\n}\r\nNavbar.defaultProps = {\r\n    title: 'Set title Here'\r\n}","import React,{useState} from 'react'\r\n\r\n\r\nexport default function Textform(props) {\r\n    const [text,setText]=useState('');\r\n    const handleUpClick=()=>{\r\n        console.log(\"Button clicked\")\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n    const handleLoClick=()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n   \r\n    const handleOnChange=(event)=>{\r\n       console.log(\"Uppercase\");\r\n       setText(event.target.value);\r\n   }\r\n   const handleClear=()=>{\r\n       let newText=\"\";\r\n       setText(newText);\r\n   }\r\n   const handleCopy=()=>{\r\n     var text=document.getElementById(\"myBox\");\r\n     text.select();\r\n     navigator.clipboard.writeText(text.value);  \r\n   }\r\n   \r\n    return (\r\n        <>\r\n        <div className=\"container-md\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n            <h2 className=\"mt-3\" >{props.header}</h2>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" id=\"myBox\" rows=\"8\" col=\"3\" style={{backgroundColor:props.mode==='dark'?'grey':'white'}} value={text} onChange={handleOnChange}></textarea>\r\n                </div>\r\n                <button className=\"btn  btn-primary mr-2 \" onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary m-2\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n                <button className=\"btn btn-primary m-2\" onClick={handleClear}>Clear Text</button>\r\n                <button className=\"btn btn-primary m-2\" onClick={handleCopy}>Copy Text</button>\r\n                <h4>Your text summary</h4>\r\n                <p>{text.split(\" \").length} Words {text.length} Characters</p>\r\n                <h4>Preview</h4>\r\n                <p>{text.length===0?'Enter Something':text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React,{useState}from 'react'\r\n\r\nexport default function About() {\r\n    const [myStyle, setMyStyle] = useState({\r\n        color:'black',\r\n        backgroundColor:'white',\r\n      \r\n    })\r\n    const [enableText, setEnableText] = useState(\"Enable Dark Mode\")\r\n  const toggleChange=()=>{\r\n      if(myStyle.color==='black'){\r\n         setMyStyle({ color:'white',\r\n          backgroundColor:'black',\r\n      })\r\n      setEnableText(\"Enable Light Mode\") ; \r\n      }\r\n      else{\r\n          setMyStyle({\r\n            color:'black',\r\n            backgroundColor:'white',\r\n          })\r\n          setEnableText(\"Enable Dark Mode\")  \r\n      }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"container my-3\" style={myStyle}>\r\n        <h2>About Us</h2>\r\n        <div className=\"accordion\" id=\"accordionExample\" style={myStyle} >\r\n  <div className=\"accordion-item\" style={myStyle}>\r\n    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n      <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" style={myStyle} data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        Accordion Item #1\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\" style={myStyle}>\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" style={myStyle} data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        Accordion Item #2\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" style={myStyle} className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\" style={myStyle}>\r\n    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n      <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n        Accordion Item #3\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" style={myStyle} data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<button className=\"btn btn-primary my-3\" onClick={toggleChange}>{enableText}</button>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alert && <div class=\"alert alert-success\" role=\"alert\">\r\n  {props.alert}\r\n</div>\r\n  )\r\n}\r\n","import './App.css';\nimport React   from 'react';\nimport Navbar from './components/Navbar'\nimport Textform from './components/Textform'\nimport About from './components/About'\nimport { useState } from 'react';\nimport Alert from './components/Alert';\n//import { Router, Routes } from 'react-router';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n const [alert, setAlert] = useState(null)\n  // const showMsg=()=>{\n  //   setMsg(\"Dark Mode is Enabled\",\"Succses\");\n  // }\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.background='#042743';\n     // showMsg();\n     setAlert(\"Dark mode is Enabled\");\n     setTimeout(()=>{\n       setAlert(null);\n     },1500);\n    }\n    else{\n      setMode('light');\n      document.body.style.background='white';\n      setAlert(\"Light mode is Enabled\");\n      setTimeout(()=>{\n       setAlert(null);\n     },1500);\n    }\n  }\n  return (\n    <>\n    <Router>\n     <Navbar title=\"TextConverter\" about=\"About App\" mode={mode} toggleMode={toggleMode}></Navbar>\n    <Alert alert={alert}/>\n    <Routes>\n          <Route path=\"/About\" element={<About/>}>\n          </Route>\n          <Route path=\"/\" element={<Textform header=\"Enter the text to analyze below\" mode={mode}/>}>\n          </Route>\n        </Routes>\n    </Router>\n    </> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}